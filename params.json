{"name":"Dinostomp1","tagline":"","body":"Title: Stomp\r\nGenre: Top Down Action\r\nKey Concept: Escape to the ocean plowing down anything that gets in your way.\r\n\r\n\r\nPhoto Courtosey of SimCity\r\n\r\nStory (Not Official):\r\nSeveral candy factories around are polluting  water with rainbow colored chemicals. The chemicals have awoken a prehistoric monster from the past. Angry with the pollution, the Kaiju sets off on a rampage. \r\n\r\nGame Design:\r\n\tZigfu Scenes that will be utilized\r\nTopDownUserRadar.scene\r\nFollowHandPoint.scene \r\n\r\nGoal:\r\nThe goal of the player will be to destroy as many buildings as they can, accumulating points for each one destroyed. To destroy a structure players need only walk into it. Candy Factories polluting water are the buildings of highest value. \r\n\r\nLevel Design:\r\nPlayers will explore top down, vertical scrolling levels (similar in construction to R-type levels). In order to construct this, we will use the TopDownUserRadar.scene.  Each level 1ronment free of buildings (an ocean or wooded area).\r\n\r\n\r\n\r\n\r\n\r\n\r\nGUI\r\nThe GUI will display how many points a player has accumulated after destroying buildings.\r\n\r\n\r\n\r\n\r\nMain Menu\r\nUpon starting up the game a menu will appear that will display the logo of the game. Under the logo will be a start button.\r\n\r\nWe will use the FollowHandPoint.scene to construct the menu. This tool allows players to use hand motions to control a cursor that they can use to knock over a set of blocks.\r\n\r\nThis tool will be used along with colliders and triggers to create buttons that players can interact with. For example, in our Splash Menu, a primitive cube with a collider used as a trigger could be used to load a level. The trigger initiates if a player hovers their cursor over the cube.  \r\n\r\n\r\nControls: (Kinect Based)\r\nMain Menu (Splash Menu):\r\nHand Icon: Follows the X and y movement of a player utilizing the hand motion Zigfu tool.  The Zigfu tool will work with a series of colliders to allow players interact with buttons to initiate a game.\r\n\r\nIn Game:\r\nAvatar (Kaiju) : This avatar follows the Z and X movements of the  player and is represented on screen by the top down Zigfu radar.  \r\n\r\n\r\n\r\nEXTRA FEATURES \r\nThese features I believe would add interesting gameplay to the experience but may be difficult to implement. I however do not want to just throw them aside, I’d rather see if our team is up to create them. One could potentially be used to fulfill a requirement ( Elka wants us to put something in the game that she hasn’t taught us in class). \r\nProcedural Levels \r\nExtra moves that require arm swings\r\nPower ups\r\nEnemies with AI\r\nComic Book Cutscenes\r\n\r\nPROJECT PLANS\r\nFinal Build Features\r\nSplash Screen Menu\r\nWhich uses hand swipe controls\r\n4 levels\r\nCustom Assets\r\n1 character\r\nFully rigged and animated\r\n16 Buildings\r\nat least four custom buildings per level\r\nA score screen that displays at the end of a level\r\nNon Custom Assets\r\nAudio\r\nMusic\r\nSound effects\r\nTask Divisions\r\nHiro\r\nSound Effects & Music\r\nWrite code for Splash Screen\r\nBuild 1 level\r\nJoel\r\nCreate custom animated Avatar for game\r\nModel 8 buildings\r\nBuild 1 level \r\nLeah\r\nModel 8 buildings\r\nBuild 1 level\r\nGUI & Menu Art\r\nNate\r\nProgram in game interactions\r\nBuild 1 level \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n---------------------------------------------------------------------------------------------------------------\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}